package com.langmy.terminal.common.entity;

// default package
// Generated 2015-1-29 19:22:28 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.google.common.collect.Sets;
import com.langmy.terminal.common.persistence.GenIdEntityImpl;

/**
 * Device generated by hbm2java
 */
@Entity
@Table(name = "device", catalog = "cloud", uniqueConstraints = @UniqueConstraint(columnNames = "device_id"))
public class Device extends GenIdEntityImpl {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7952798323462968079L;
	private Driveway driveway; //车道
	private String deviceId; //编号
	private Integer type; //类型
	private String name; //名称
	private String posit; //位置
	private String ip; //IP
	private Integer open; //闸机开信号
	private Integer close; //闸机关信号
	private Integer port; //端口号
	private boolean lineState; //在线离线状态
	private boolean delFlag;//删除标志位
	private boolean openFlag;//闸机开启关闭状态 1：开启 0：关闭
	
	
	/**
	 * 数据转化主机对应相应的Led显示屏
	 */
	private List<LedScreen> ledScreens;
	private List<OperShift> operShifts;
	private Set<Driveway> driveWays = Sets.newHashSet();
	private Set<OperLiftRec> operLiftRecs = new HashSet<OperLiftRec>(0);

	public Device() {
	}

	public Device(Driveway driveway, String deviceId, Integer type, Integer open,
			Integer close, Integer port, String name, String posit, String ip,
			Integer state, Set<OperLiftRec> operLiftRecs) {
		this.driveway = driveway;
		this.deviceId = deviceId;
		this.type = type;
		this.open = open;
		this.close = close;
		this.port = port;
		this.name = name;
		this.posit = posit;
		this.ip = ip;
		this.operLiftRecs = operLiftRecs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "driveway_id")
	public Driveway getDriveway() {
		return this.driveway;
	}

	public void setDriveway(Driveway driveway) {
		this.driveway = driveway;
	}

	@Column(name = "device_id", unique = true, length = 20)
	public String getDeviceId() {
		return this.deviceId;
	}

	public void setDeviceId(String deviceId) {
		this.deviceId = deviceId;
	}

	@Column(name = "type")
	public Integer getType() {
		return this.type;
	}

	public void setType(Integer type) {
		this.type = type;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "posit", length = 20)
	public String getPosit() {
		return this.posit;
	}

	public void setPosit(String posit) {
		this.posit = posit;
	}

	@Column(name = "ip", length = 20)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "device")
	public Set<OperLiftRec> getOperLiftRecs() {
		return this.operLiftRecs;
	}

	public void setOperLiftRecs(Set<OperLiftRec> operLiftRecs) {
		this.operLiftRecs = operLiftRecs;
	}

	@Column(name = "open")
	public Integer getOpen() {
		return open;
	}

	public void setOpen(Integer open) {
		this.open = open;
	}

	@Column(name = "close")
	public Integer getClose() {
		return close;
	}

	public void setClose(Integer close) {
		this.close = close;
	}

	@Column(name = "port")
	public Integer getPort() {
		return port;
	}

	public void setPort(Integer port) {
		this.port = port;
	}

	@Column(name = "line_state")
	public boolean isLineState() {
		return lineState;
	}

	public void setLineState(boolean lineState) {
		this.lineState = lineState;
	}

	@Column(name = "del_flag", nullable = false)
	public boolean isDelFlag() {
		return this.delFlag;
	}

	public void setDelFlag(boolean delFlag) {
		this.delFlag = delFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "terminal")
	public Set<Driveway> getDriveWays() {
		return driveWays;
	}

	public void setDriveWays(Set<Driveway> driveWays) {
		this.driveWays = driveWays;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataMaster")
	public List<LedScreen> getLedScreens() {
		return ledScreens;
	}

	/**
	 * @param ledScreens the ledScreens to set
	 */
	public void setLedScreens(List<LedScreen> ledScreens) {
		this.ledScreens = ledScreens;
	}

	@Column(name = "open_flag", nullable = false)
	public boolean isOpenFlag() {
		return openFlag;
	}

	public void setOpenFlag(boolean openFlag) {
		this.openFlag = openFlag;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "terminal")
	public List<OperShift> getOperShifts() {
		return operShifts;
	}

	public void setOperShifts(List<OperShift> operShifts) {
		this.operShifts = operShifts;
	}

}

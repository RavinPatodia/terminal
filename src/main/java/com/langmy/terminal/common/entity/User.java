package com.langmy.terminal.common.entity;

// default package
// Generated 2015-1-29 19:22:28 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import com.google.common.collect.Lists;
import com.langmy.terminal.common.persistence.GenIdEntityImpl;
import com.langmy.terminal.common.utils.SetUtils;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "cloud", uniqueConstraints = { @UniqueConstraint(columnNames = "id_card") })
public class User extends GenIdEntityImpl {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2462871925441966543L;
	private UGroup UGroup; // 客户组
	private String uacc; // 账户名
	private String upwd; // 客户密码
	private int state; // （用户状态 0:申请待审批 1:审批通过 2:审批未通过 3:暂停 4:删除)
	private String name; // 姓名
	private String idCard; // 身份证号
	private Boolean gender; // 性别
	private Date birthday; // 出生日期
	private Boolean hasParkingSpaces; // 是否拥有专属车位
	private Account account; // 账户
	private Set<UserPSp> userPSps = new HashSet<UserPSp>(0); // 用户车位
	private Set<Car> cars = new HashSet<Car>(0); // 车辆
	private Set<RechargeRec> rechargeRecs = new HashSet<RechargeRec>(0); // 充值记录
	private Set<Blacklist> blacklists = new HashSet<Blacklist>(0); // 黑名单

	private List<Car> carList = Lists.newArrayList();

	@Override
	public String toString() {
		return "User [UGroup=" + UGroup.getId() + ", state=" + state
				+ ", name=" + name + ", idCard=" + idCard + ", gender="
				+ gender + ", birthday=" + birthday + ", hasParkingSpaces="
				+ hasParkingSpaces + "]";
	}

	@PrePersist
	public void preSave() {
		hasParkingSpaces = false;
	}

	public User() {
	}

	public User(UGroup UGroup, int state, boolean isEnable) {
		this.UGroup = UGroup;
		this.state = state;
	}

	public User(UGroup UGroup, int state, boolean isEnable, String name,
			String idCard, Boolean gender, Date birthday,
			Boolean hasParkingSpaces, Account account, Set<UserPSp> userPSps,
			Set<Car> cars, Set<RechargeRec> rechargeRecs,
			Set<Blacklist> blacklists) {
		this.UGroup = UGroup;
		this.state = state;
		this.name = name;
		this.idCard = idCard;
		this.gender = gender;
		this.birthday = birthday;
		this.hasParkingSpaces = hasParkingSpaces;
		this.account = account;
		this.userPSps = userPSps;
		this.cars = cars;
		this.rechargeRecs = rechargeRecs;
		this.blacklists = blacklists;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "u_group_id")
	public UGroup getUGroup() {
		return this.UGroup;
	}

	public void setUGroup(UGroup UGroup) {
		this.UGroup = UGroup;
	}

	@Column(name = "u_acc", length = 20)
	public String getUacc() {
		return this.uacc;
	}

	public void setUacc(String uacc) {
		this.uacc = uacc;
	}

	@Column(name = "u_pwd", length = 20)
	public String getUpwd() {
		return this.upwd;
	}

	public void setUpwd(String upwd) {
		this.upwd = upwd;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "state", nullable = false)
	public int getState() {
		return this.state;
	}

	public void setState(int state) {
		this.state = state;
	}

	@Column(name = "id_card", unique = true, length = 20)
	public String getIdCard() {
		return this.idCard;
	}

	public void setIdCard(String idCard) {
		this.idCard = idCard;
	}

	@Column(name = "gender")
	public Boolean getGender() {
		return this.gender;
	}

	public void setGender(Boolean gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthday", length = 10)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "has_parking_spaces")
	public Boolean getHasParkingSpaces() {
		return this.hasParkingSpaces;
	}

	public void setHasParkingSpaces(Boolean hasParkingSpaces) {
		this.hasParkingSpaces = hasParkingSpaces;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserPSp> getUserPSps() {
		return this.userPSps;
	}

	public void setUserPSps(Set<UserPSp> userPSps) {
		this.userPSps = userPSps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Car> getCars() {
		return this.cars;
	}

	public void setCars(Set<Car> cars) {
		this.cars = cars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RechargeRec> getRechargeRecs() {
		return this.rechargeRecs;
	}

	public void setRechargeRecs(Set<RechargeRec> rechargeRecs) {
		this.rechargeRecs = rechargeRecs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Blacklist> getBlacklists() {
		return this.blacklists;
	}

	public void setBlacklists(Set<Blacklist> blacklists) {
		this.blacklists = blacklists;
	}

	@Transient
	public List<Car> getCarList() {
		return SetUtils.convertList(cars);
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "user")
	public Account getAccount() {
		return account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

}

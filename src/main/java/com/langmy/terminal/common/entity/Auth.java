package com.langmy.terminal.common.entity;

// default package
// Generated 2015-1-29 19:22:28 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.langmy.terminal.common.persistence.GenIdEntityImpl;

/**
 * Auth generated by hbm2java
 */
@Entity
@Table(name = "auth", catalog = "cloud")
public class Auth extends GenIdEntityImpl {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1165221650205526565L;
	private String authId; //权限ID
	private int type;// 类型 0:平台 1：终端
	private Integer parentId; //父权限ID
	private String parentIds; //父权限树
	private String name; //权限名称
	private String href; //链接
	private String target; //目标
	private String icon; //图标
	private String sort; //排序
	private Boolean isShow; //是否在菜单中显示
	private String permission; //权限标识
	private boolean delFlag; //删除标志位
	private Set<Role> roleList = new HashSet<Role>(0);

	public Auth() {
	}

	public Auth(String authId, Integer parentId, String parentIds, String name,
			String href, String target, String icon, String sort,
			Boolean isShow, String permission, Set<Role> roleList) {
		this.authId = authId;
		this.parentId = parentId;
		this.parentIds = parentIds;
		this.name = name;
		this.href = href;
		this.target = target;
		this.icon = icon;
		this.sort = sort;
		this.isShow = isShow;
		this.permission = permission;
		this.roleList = roleList;
	}

	@Column(name = "auth_id", length = 20)
	public String getAuthId() {
		return this.authId;
	}

	public void setAuthId(String authId) {
		this.authId = authId;
	}

	@Column(name = "parent_id")
	public Integer getParentId() {
		return this.parentId;
	}

	public void setParentId(Integer parentId) {
		this.parentId = parentId;
	}

	@Column(name = "parent_ids", length = 2000)
	public String getParentIds() {
		return this.parentIds;
	}

	public void setParentIds(String parentIds) {
		this.parentIds = parentIds;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "href")
	public String getHref() {
		return this.href;
	}

	public void setHref(String href) {
		this.href = href;
	}

	@Column(name = "target", length = 10)
	public String getTarget() {
		return this.target;
	}

	public void setTarget(String target) {
		this.target = target;
	}

	@Column(name = "icon", length = 100)
	public String getIcon() {
		return this.icon;
	}

	public void setIcon(String icon) {
		this.icon = icon;
	}

	@Column(name = "sort", length = 10)
	public String getSort() {
		return this.sort;
	}

	public void setSort(String sort) {
		this.sort = sort;
	}

	@Column(name = "is_show")
	public Boolean getIsShow() {
		return this.isShow;
	}

	public void setIsShow(Boolean isShow) {
		this.isShow = isShow;
	}

	@Column(name = "permission", length = 200)
	public String getPermission() {
		return this.permission;
	}

	public void setPermission(String permission) {
		this.permission = permission;
	}
	
	@Column(name = "type", nullable = false)
	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "role_auth", catalog = "cloud", joinColumns = { @JoinColumn(name = "auth_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "role_id", nullable = false, updatable = false) })
	public Set<Role> getRoleList() {
		return this.roleList;
	}

	public void setRoleList(Set<Role> roleList) {
		this.roleList = roleList;
	}

	@Column(name = "del_flag", nullable = false)
	public boolean isDelFlag() {
		return this.delFlag;
	}

	public void setDelFlag(boolean delFlag) {
		this.delFlag = delFlag;
	}

	@Transient
	public static void sortList(List<Auth> list, List<Auth> sourcelist,
			Integer parentId) {
		for (int i = 0; i < sourcelist.size(); i++) {
			Auth e = sourcelist.get(i);
			if (e.getParentId() != null && e.getParentId() == parentId) {
				list.add(e);
				// 判断是否还有子节点, 有则继续获取子节点
				for (int j = 0; j < sourcelist.size(); j++) {
					Auth child = sourcelist.get(j);
					if (child.getParentId() != null
							&& child.getParentId() == e.getId()) {
						sortList(list, sourcelist, e.getId());
						break;
					}
				}
			}
		}
	}

}

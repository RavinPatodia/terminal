package com.langmy.terminal.common.entity;

// Generated 2015-5-4 11:13:58 by Hibernate Tools 4.3.1

import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import com.google.common.collect.Lists;
import com.langmy.terminal.common.persistence.GenIdEntityImpl;

/**
 * LedScreen generated by hbm2java
 */
@Entity
@Table(name = "led_screen", catalog = "cloud")
public class LedScreen extends GenIdEntityImpl {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2091074361537855107L;
	private String ledId; //编号
	private String name; //名称
	private int type; //类型
	private int color; //LED显示颜色
	private int direction; //描述
	private boolean lineState; //车牌号
	private Integer configureId;//车道或者卡口外键
	private String message; //显示信息
	private int cardNum; //控制卡编号
	private int width; //显示屏宽度
	private int height; //显示屏高度
	private boolean delFlag; //删除标志位
	private Device dataMaster; //设备
	private boolean configureFlag;//是否存在车位配置页面
	private List<Area> areas = Lists.newArrayList(); //区域

	public LedScreen() {
	}

	public LedScreen(String ledId, String name, int type, int color, int direction,
			boolean lineState, int cardNum, int width, int height, boolean delFlag) {
		this.ledId = ledId;
		this.name = name;
		this.type = type;
		this.color = color;
		this.direction = direction;
		this.lineState = lineState;
		this.cardNum = cardNum;
		this.width = width;
		this.height = height;
		this.delFlag = delFlag;
	}

	public LedScreen(String ledId, String name, int type, int color, int direction,
			boolean lineState, String message, int cardNum, int width, int height, boolean delFlag) {
		this.ledId = ledId;
		this.name = name;
		this.type = type;
		this.color = color;
		this.direction = direction;
		this.lineState = lineState;
		this.message = message;
		this.cardNum = cardNum;
		this.width = width;
		this.height = height;
		this.delFlag = delFlag;
	}


	@Column(name = "led_id", nullable = false, length = 30)
	public String getLedId() {
		return this.ledId;
	}

	public void setLedId(String ledId) {
		this.ledId = ledId;
	}

	@Column(name = "name", nullable = false, length = 30)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "type", nullable = false)
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "color", nullable = false)
	public int getColor() {
		return this.color;
	}

	public void setColor(int color) {
		this.color = color;
	}

	@Column(name = "direction", nullable = false)
	public int getDirection() {
		return this.direction;
	}

	public void setDirection(int direction) {
		this.direction = direction;
	}

	@Column(name = "line_state", nullable = false)
	public boolean isLineState() {
		return this.lineState;
	}

	public void setLineState(boolean lineState) {
		this.lineState = lineState;
	}

	@Column(name = "message", length = 100)
	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	@Column(name = "card_num", nullable = false)
	public int getCardNum() {
		return this.cardNum;
	}

	public void setCardNum(int cardNum) {
		this.cardNum = cardNum;
	}

	@Column(name = "width", nullable = false)
	public int getWidth() {
		return this.width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	@Column(name = "height", nullable = false)
	public int getHeight() {
		return this.height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	@Column(name = "del_flag", nullable = false)
	public boolean isDelFlag() {
		return this.delFlag;
	}

	public void setDelFlag(boolean delFlag) {
		this.delFlag = delFlag;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "screen_area", catalog = "cloud", joinColumns = { @JoinColumn(name = "led_screen_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "area_id", nullable = false, updatable = false) })
	public List<Area> getAreas() {
		return areas;
	}

	public void setAreas(List<Area> areas) {
		this.areas = areas;
	}

	@Column(name = "configure_id")
	public Integer getConfigureId() {
		return configureId;
	}

	public void setConfigureId(Integer configureId) {
		this.configureId = configureId;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "terminal_id")
	public Device getDataMaster() {
		return dataMaster;
	}

	public void setDataMaster(Device dataMaster) {
		this.dataMaster = dataMaster;
	}

	@Column(name = "configure_flag", nullable = false)
	public boolean isConfigureFlag() {
		return configureFlag;
	}

	public void setConfigureFlag(boolean configureFlag) {
		this.configureFlag = configureFlag;
	}
	

}

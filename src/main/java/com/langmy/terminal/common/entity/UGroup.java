package com.langmy.terminal.common.entity;

// Generated 2015-2-3 18:18:41 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.google.common.collect.Lists;
import com.langmy.terminal.common.persistence.RuleEntity;

/**
 * UGroup generated by hbm2java
 */
@Entity
@Table(name = "u_group", catalog = "cloud")
public class UGroup extends RuleEntity {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4368624054529290564L;
	private DctRuleGroup dctRuleGroup; // 优惠规则组
	private String ugroupId; // 客户组ID
	private String name; // 名称
	private int type; // 类型
	private String describion; // 描述
	private boolean delFlag; // 删除标志位
	private Date createTime; // 创建时间
	private Integer changeGroup; // 长期客户到期变更客户组
	private List<Park> parks = Lists.newArrayList(); // 停车场
	private Set<UGChargeRule> UGChargeRules = new HashSet<UGChargeRule>(0); // 客户组收费规则
	private Set<User> users = new HashSet<User>(0); // 客户

	@Override
	public String toString() {
		return "UGroup [优惠规则组ID=" + dctRuleGroup + ", 用户组ID=" + ugroupId
				+ ", 用户组名称=" + name + ", 类型=" + type + ", 用户组描述=" + describion
				+ "]";
	}

	public UGroup() {
	}

	public UGroup(String ugroupId, String name, boolean isEnable,
			DctRuleGroup dctRuleGroup) {
		this.ugroupId = ugroupId;
		this.name = name;
		this.enableFlag = isEnable;
		this.dctRuleGroup = dctRuleGroup;
	}

	public UGroup(String ugroupId, String name, boolean isEnable,
			Date createTime, Date lastEnable) {
		this.ugroupId = ugroupId;
		this.name = name;
		this.enableFlag = isEnable;
		this.createTime = createTime;
		this.lastEnable = lastEnable;
	}

	public UGroup(DctRuleGroup dctRuleGroup, String ugroupId, String name,
			String describion, boolean isEnable, Date lastDisable,
			Date createTime, Date lastEnable, Set<UGChargeRule> UGChargeRules,
			Set<User> users) {
		this.dctRuleGroup = dctRuleGroup;
		this.ugroupId = ugroupId;
		this.name = name;
		this.describion = describion;
		this.enableFlag = isEnable;
		this.lastDisable = lastDisable;
		this.createTime = createTime;
		this.lastEnable = lastEnable;
		this.UGChargeRules = UGChargeRules;
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dct_group_id")
	public DctRuleGroup getDctRuleGroup() {
		return this.dctRuleGroup;
	}

	public void setDctRuleGroup(DctRuleGroup dctRuleGroup) {
		this.dctRuleGroup = dctRuleGroup;
	}

	@Column(name = "u_group_id", nullable = false, length = 10)
	public String getUgroupId() {
		return this.ugroupId;
	}

	public void setUgroupId(String UGroupId) {
		this.ugroupId = UGroupId;
	}

	@Column(name = "name", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "describion")
	public String getDescribion() {
		return this.describion;
	}

	public void setDescribion(String describion) {
		this.describion = describion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UGroup")
	public Set<UGChargeRule> getUGChargeRules() {
		return this.UGChargeRules;
	}

	public void setUGChargeRules(Set<UGChargeRule> UGChargeRules) {
		this.UGChargeRules = UGChargeRules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UGroup")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@Column(name = "type", nullable = false)
	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "del_flag", nullable = false)
	public boolean isDelFlag() {
		return this.delFlag;
	}

	public void setDelFlag(boolean delFlag) {
		this.delFlag = delFlag;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "u_g_park", catalog = "cloud", joinColumns = { @JoinColumn(name = "u_group_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "park_id", nullable = false, updatable = false) })
	public List<Park> getParks() {
		return parks;
	}

	public void setParks(List<Park> parks) {
		this.parks = parks;
	}

	@Column(name = "change_group")
	public Integer getChangeGroup() {
		return changeGroup;
	}

	public void setChangeGroup(Integer changeGroup) {
		this.changeGroup = changeGroup;
	}

}
